// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/client/client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "github.com/Arcadian-Sky/datakkeeper/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockGRPCClientInterface is a mock of GRPCClientInterface interface.
type MockGRPCClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGRPCClientInterfaceMockRecorder
}

// MockGRPCClientInterfaceMockRecorder is the mock recorder for MockGRPCClientInterface.
type MockGRPCClientInterfaceMockRecorder struct {
	mock *MockGRPCClientInterface
}

// NewMockGRPCClientInterface creates a new mock instance.
func NewMockGRPCClientInterface(ctrl *gomock.Controller) *MockGRPCClientInterface {
	mock := &MockGRPCClientInterface{ctrl: ctrl}
	mock.recorder = &MockGRPCClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGRPCClientInterface) EXPECT() *MockGRPCClientInterfaceMockRecorder {
	return m.recorder
}

// Authenticate mocks base method.
func (m *MockGRPCClientInterface) Authenticate(login, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authenticate", login, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// Authenticate indicates an expected call of Authenticate.
func (mr *MockGRPCClientInterfaceMockRecorder) Authenticate(login, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authenticate", reflect.TypeOf((*MockGRPCClientInterface)(nil).Authenticate), login, password)
}

// Delete mocks base method.
func (m *MockGRPCClientInterface) Delete(id int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockGRPCClientInterfaceMockRecorder) Delete(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockGRPCClientInterface)(nil).Delete), id)
}

// DeleteFile mocks base method.
func (m *MockGRPCClientInterface) DeleteFile(fileName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFile", fileName)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFile indicates an expected call of DeleteFile.
func (mr *MockGRPCClientInterfaceMockRecorder) DeleteFile(fileName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFile", reflect.TypeOf((*MockGRPCClientInterface)(nil).DeleteFile), fileName)
}

// GetDataList mocks base method.
func (m *MockGRPCClientInterface) GetDataList() ([]model.Data, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataList")
	ret0, _ := ret[0].([]model.Data)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataList indicates an expected call of GetDataList.
func (mr *MockGRPCClientInterfaceMockRecorder) GetDataList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataList", reflect.TypeOf((*MockGRPCClientInterface)(nil).GetDataList))
}

// GetFile mocks base method.
func (m *MockGRPCClientInterface) GetFile(fileName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFile", fileName)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetFile indicates an expected call of GetFile.
func (mr *MockGRPCClientInterfaceMockRecorder) GetFile(fileName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFile", reflect.TypeOf((*MockGRPCClientInterface)(nil).GetFile), fileName)
}

// GetFileList mocks base method.
func (m *MockGRPCClientInterface) GetFileList() ([]model.FileItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileList")
	ret0, _ := ret[0].([]model.FileItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFileList indicates an expected call of GetFileList.
func (mr *MockGRPCClientInterfaceMockRecorder) GetFileList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileList", reflect.TypeOf((*MockGRPCClientInterface)(nil).GetFileList))
}

// Register mocks base method.
func (m *MockGRPCClientInterface) Register(login, password string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Register", login, password)
	ret0, _ := ret[0].(error)
	return ret0
}

// Register indicates an expected call of Register.
func (mr *MockGRPCClientInterfaceMockRecorder) Register(login, password interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Register", reflect.TypeOf((*MockGRPCClientInterface)(nil).Register), login, password)
}

// SaveCard mocks base method.
func (m *MockGRPCClientInterface) SaveCard(title, card string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveCard", title, card)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveCard indicates an expected call of SaveCard.
func (mr *MockGRPCClientInterfaceMockRecorder) SaveCard(title, card interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveCard", reflect.TypeOf((*MockGRPCClientInterface)(nil).SaveCard), title, card)
}

// SaveLoginPass mocks base method.
func (m *MockGRPCClientInterface) SaveLoginPass(domain, login, pass string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveLoginPass", domain, login, pass)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveLoginPass indicates an expected call of SaveLoginPass.
func (mr *MockGRPCClientInterfaceMockRecorder) SaveLoginPass(domain, login, pass interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveLoginPass", reflect.TypeOf((*MockGRPCClientInterface)(nil).SaveLoginPass), domain, login, pass)
}

// UploadFile mocks base method.
func (m *MockGRPCClientInterface) UploadFile(filePath string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFile", filePath)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadFile indicates an expected call of UploadFile.
func (mr *MockGRPCClientInterfaceMockRecorder) UploadFile(filePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFile", reflect.TypeOf((*MockGRPCClientInterface)(nil).UploadFile), filePath)
}
